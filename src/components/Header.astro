---
import HeaderLink from "./HeaderLink.astro";
import { SITE_TITLE } from "../consts";
import HeaderDropdown from "./HeaderDropdown.astro";
import { getCollection } from "astro:content";

const topics = await getCollection("topic");
---

<header>
  <div class="header-bar">
    <div class="header-container">
      <div class="title-container">
        <h2 class="title">
          <a href="/">
            {SITE_TITLE}
          </a>
        </h2>

        <button class="hamburger">
          <svg
            class="open"
            xmlns="http://www.w3.org/2000/svg"
            fill="none"
            viewBox="0 0 24 24"
            stroke-width="1.5"
            stroke="currentColor"
            class="w-6 h-6"
          >
            <path
              stroke-linecap="round"
              stroke-linejoin="round"
              d="M3.75 6.75h16.5M3.75 12h16.5m-16.5 5.25h16.5"></path>
          </svg>
          <svg
            class="close"
            xmlns="http://www.w3.org/2000/svg"
            fill="none"
            viewBox="0 0 24 24"
            stroke-width="1.5"
            stroke="currentColor"
            class="w-6 h-6"
          >
            <path
              stroke-linecap="round"
              stroke-linejoin="round"
              d="M6 18L18 6M6 6l12 12"></path>
          </svg>
        </button>
      </div>

      <nav>
        <ul>
          <HeaderLink href="/blog">Blog</HeaderLink>
          <HeaderLink href="/authors">Authors</HeaderLink>
          <HeaderDropdown href="/topics" linkText="Topics">
            {
              topics.map((topic) => (
                <HeaderLink href={`/topics/${topic.slug}`}>
                  {topic.data.title}
                </HeaderLink>
              ))
            }
          </HeaderDropdown>
          <HeaderLink href="/about">About</HeaderLink>
          <HeaderLink href="https://twitter.com/astrodotbuild" target="_blank">
            Twitter
          </HeaderLink>
          <HeaderLink href="https://github.com/withastro/astro" target="_blank">
            GitHub
          </HeaderLink>
          <HeaderLink href="/search">
            <svg
              xmlns="http://www.w3.org/2000/svg"
              fill="none"
              viewBox="0 0 24 24"
              stroke-width="1.5"
              stroke="currentColor"
              class="w-6 h-6"
            >
              <title>Search</title>
              <path
                stroke-linecap="round"
                stroke-linejoin="round"
                d="M21 21l-5.197-5.197m0 0A7.5 7.5 0 105.196 5.196a7.5 7.5 0 0010.607 10.607z"
              ></path>
            </svg>
          </HeaderLink>
        </ul>
      </nav>
    </div>
  </div>
</header>

<style>
  .header-container {
    max-width: 1200px;
    width: 100%;
    margin: 0 auto;
    padding: 0 1rem;
    display: flex;
    flex-direction: row;
    align-items: center;
    justify-content: space-between;
  }
  nav ul :global(svg) {
    height: 1.5rem;
  }
  .header-bottom {
    padding: 4rem 0;
    background: #000;
    width: 100%;
    color: #fff;
  }
  header {
    position: sticky;
    top: 0;
    left: 0;
    display: flex;
    flex-direction: column;
    padding: 1rem 0;
    background: #000;
    color: #fff;
    width: 100%;
  }

  .header-bar {
    width: 100%;
    padding: 0 0.5rem;
    position: relative;
    z-index: 1;
  }
  ul {
    list-style: none;
    margin: 0;
    padding: 0;
    display: flex;
    flex-direction: row;
    align-items: center;
    justify-content: space-between;
  }
  header :global(a) {
    color: #fff;
  }
  ul :global(> li) {
    /* padding-bottom: 0.5rem; */
    margin-right: 1rem;
  }
  .title {
    font-size: 1.5rem;
    font-weight: 500;
    margin: 0;
  }

  .title > a {
    color: #fff;
    text-decoration: none;
  }

  .hamburger {
    background-color: transparent;
    color: #fff;
    display: none;
  }
  @media (max-width: 800px) {
    header {
      padding: 0;
    }
    .title {
      margin: 0;
    }
    ul {
      padding: 1rem 0.5rem;
      flex-direction: column;
      align-items: flex-start;
    }
    nav ul :global(> li) {
      width: 100%;
    }
    nav ul :global(> li a) {
      display: inline-block;
      padding: 0.5rem 0;
      width: 100%;
    }
    .hamburger {
      display: flex;
      align-items: center;
      justify-content: center;
      padding: 4px;
      width: 32px;
      height: 32px;
      border: 2px solid white;
      border-radius: 100px;
    }
    .hamburger:active {
      background-color: #fff;
      color: #000;
      cursor: pointer;
    }
    .hamburger.open svg.open {
      display: none;
    }
    .hamburger svg.close {
      display: none;
    }
    .hamburger.open svg.close {
      display: block;
    }
    .title-container {
      width: 100%;
      padding: 0.8rem 0;
      display: flex;
      justify-content: space-between;
      align-items: center;
    }
    nav {
      display: none;

      left: 0;
      top: 100%;
      position: absolute;
      padding: 0 20px;
      background-color: #000;
      width: 100%;
    }
    nav.open {
      display: block;
    }
  }
</style>

<script>
  const hamburger = document.querySelector(".hamburger");
  const nav = document.querySelector("nav");

  if (!hamburger || !nav) {
    throw new Error("Could not find hamburger or nav");
  }

  hamburger.addEventListener("click", () => {
    nav.classList.toggle("open");
    hamburger.classList.toggle("open");
  });
</script>
