---
import Layout from "../../layouts/TransitionContent.astro";
import { type CollectionEntry, getCollection } from "astro:content";
import type { GetStaticPaths, Page } from "astro";
import PostList from "../../components/PostList.astro";
import { PAGINATION_POSTS_PER_PAGE } from "../../consts";

export const getStaticPaths: GetStaticPaths = async ({ paginate }) => {
  const posts = (await getCollection("blog"))
    .filter((post) => post.data.draft === false)
    .sort((a, b) => b.data.pubDate.valueOf() - a.data.pubDate.valueOf());
  return paginate(posts, {
    pageSize: PAGINATION_POSTS_PER_PAGE,
  });
};

export type Props = {
  page: Page<CollectionEntry<"blog">>;
};

const { page } = Astro.props;
---

<Layout
  title="Blog"
  description="Our engineers write about the technical challanges they have faced."
>
  <h1>Blog</h1>
  <div class="grid gap-8">
    <PostList posts={page.data} />
    <div class="grid w-full grid-cols-3 justify-between">
      {
        page.url.prev ? (
          <a class="flex items-center gap-2 text-left" href={page.url.prev}>
            <svg
              xmlns="http://www.w3.org/2000/svg"
              fill="none"
              viewBox="0 0 24 24"
              stroke-width="1.5"
              stroke="currentColor"
              class="h-4 w-4"
            >
              <path
                stroke-linecap="round"
                stroke-linejoin="round"
                d="M10.5 19.5L3 12m0 0l7.5-7.5M3 12h18"
              />
            </svg>
            Previous
          </a>
        ) : (
          <span />
        )
      }
      {
        page.url.current ? (
          <span class="text-center">Page {page.currentPage}</span>
        ) : (
          <span />
        )
      }
      {
        page.url.next ? (
          <a
            class="flex items-center justify-end gap-2 text-right"
            href={page.url.next}
          >
            Next
            <svg
              xmlns="http://www.w3.org/2000/svg"
              fill="none"
              viewBox="0 0 24 24"
              stroke-width="1.5"
              stroke="currentColor"
              class="h-4 w-4"
            >
              <path
                stroke-linecap="round"
                stroke-linejoin="round"
                d="M13.5 4.5L21 12m0 0l-7.5 7.5M21 12H3"
              />
            </svg>
          </a>
        ) : (
          <span />
        )
      }
    </div>
  </div>
</Layout>
